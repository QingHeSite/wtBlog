(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{373:function(e,r,t){"use strict";t.r(r);var o=t(25),a=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" Docker")]),e._v(" "),t("h4",{attrs:{id:"基本步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本步骤"}},[e._v("#")]),e._v(" 基本步骤")]),e._v(" "),t("ol",[t("li",[e._v("首先创建Dockerfile文件")]),e._v(" "),t("li",[e._v("执行 "),t("code",[e._v("docker image build -t docker-demo .")]),e._v("\n其中"),t("code",[e._v("docker-demo")]),e._v("为自取的镜像名称,还要注意末尾的"),t("code",[e._v(".")]),e._v(",标识在当前目录")]),e._v(" "),t("li",[e._v("接下来可执行"),t("code",[e._v("docker image ls")]),e._v("查看新生产的image文件")]),e._v(" "),t("li",[e._v("启动容器 "),t("code",[e._v("docker container run")]),e._v(", 此命令会从image文件生产容器\n"),t("code",[e._v("docker container run -p 8000:3000 -it docker-demo:0.0.1 /bin/bash")])]),e._v(" "),t("li",[e._v("查看所有容器 "),t("code",[e._v("docker ps -a")])])]),e._v(" "),t("h5",{attrs:{id:"进入容器命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进入容器命令"}},[e._v("#")]),e._v(" 进入容器命令")]),e._v(" "),t("p",[t("code",[e._v("docker exec -it Container-ID /bin/bash")])])])}),[],!1,null,null,null);r.default=a.exports}}]);