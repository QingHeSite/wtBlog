(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{195:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"常用正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用正则表达式"}},[t._v("#")]),t._v(" 常用正则表达式")]),t._v(" "),s("h4",{attrs:{id:"正向否定查找"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正向否定查找"}},[t._v("#")]),t._v(" 正向否定查找")]),t._v(" "),s("p",[t._v("eg: 有100个url,执行代码时需要不匹配其中两个,如果使用"),s("code",[t._v("if else")]),t._v("也是可以的,只不过工作量太大了,"),s("code",[t._v("for")]),t._v("循环也可,但是不够优雅,正则可以一行解决(正向否定查找)\n比如需要不匹配的两个地址是 "),s("code",[t._v("index.html")]),t._v("和"),s("code",[t._v("tupian.html")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^((?!(index\\.html))(?!(tupian\\.html)))$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])}],!1,null,null,null);e.default=n.exports}}]);