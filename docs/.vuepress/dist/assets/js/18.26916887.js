(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{375:function(t,e,a){"use strict";a.r(e);var s=a(25),i=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"git常用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" GIT常用命令")]),t._v(" "),a("ul",[a("li",[t._v("使用 https 和远程仓库通信，Git 默认每次操作都需要输入用户名和密码，十分麻烦,以下命令可保存登录态")])]),t._v(" "),a("p",[a("code",[t._v("git config --global credential.helper store")])]),t._v(" "),a("ul",[a("li",[t._v("解决每次拉取代码都需要填写合并信息")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout .\ngit reset --hard origin/master\ngit pull\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h5",{attrs:{id:"git-命令解释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-命令解释"}},[t._v("#")]),t._v(" git 命令解释")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git checkout .")])])]),t._v(" "),a("p",[t._v("使用暂存区的文件覆盖工作区，所以执行完git add .之后，再执行该命令是无效的")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git log --oneline --graph --decorate")]),t._v("\n本地查看当前分支开自哪个分支")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git push -u origin master -f")]),t._v("\n强制推送到远程分支(慎用)")])])]),t._v(" "),a("h5",{attrs:{id:"linux上清除保存的git账号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linux上清除保存的git账号"}},[t._v("#")]),t._v(" linux上清除保存的git账号")]),t._v(" "),a("p",[a("code",[t._v("vi ~/.git-credentials")]),t._v(",删除记录的账号即可,下次"),a("code",[t._v("clone")]),t._v("or"),a("code",[t._v("pull")]),t._v("就需要手动输入账号了")]),t._v(" "),a("h3",{attrs:{id:"git工作规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git工作规范"}},[t._v("#")]),t._v(" Git工作规范")]),t._v(" "),a("h4",{attrs:{id:"使用流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用流程"}},[t._v("#")]),t._v(" 使用流程")]),t._v(" "),a("p",[t._v("基于devlope创建feature分支 -> 合并到devlope分支(供测试人员测试) -> 基于devlope创建release分支(进行预生产测试) -> 合并到master分支(正式上线)")]),t._v(" "),a("h4",{attrs:{id:"永久分支-临时分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#永久分支-临时分支"}},[t._v("#")]),t._v(" 永久分支 & 临时分支")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("master")]),t._v(" "),a("code",[t._v("devlope")]),t._v(" 为永久分支")]),t._v(" "),a("li",[a("code",[t._v("feature/name")]),t._v(" "),a("code",[t._v("hotfix/bugName")]),t._v(" "),a("code",[t._v("release")]),t._v(" 为临时分支")])]),t._v(" "),a("h4",{attrs:{id:"整洁合并多个commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整洁合并多个commit"}},[t._v("#")]),t._v(" 整洁合并多个commit")]),t._v(" "),a("p",[a("code",[t._v("git rebase --i HEAD~3")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("--i")]),t._v(" 表示interactive  交互")]),t._v(" "),a("li",[t._v("交互中指令 "),a("code",[t._v("squash")]),t._v("-与上个commit message 合并,"),a("code",[t._v("pick")]),t._v(" 保留commit  message 信息")])])])}),[],!1,null,null,null);e.default=i.exports}}]);